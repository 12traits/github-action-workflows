name: docker-push
on:
  workflow_call:
    secrets:
      gh-token:
        required: true
      gcp-sa-json:
        required: true
        description: GCP access key in Json that have permissions to push images to repo
      gcp-project-id:
        required: true
        description: GCP Project ID
      slack-build-webhook:
        required: false
    inputs:
      repository-base-name:
        required: true
        type: string
        description: Docker registry's repository name
      docker-registry:
        type: string
        description: Docker registry DNS
        default: eu.gcr.io
      docker-tag:
        type: string
        description: Docker tag
        default: dev
      is-latest:
        type: boolean
        description: Do we want to tag this image as latest
        default: false
    outputs:
      sha-short:
        value: ${{ jobs.docker-push.outputs.sha-short }}
        description: short SHA of the commit
      branch:
        value: ${{ jobs.docker-push.outputs.branch }}
        description: branch name

jobs:
  docker-push:
    runs-on: ubuntu-latest
    outputs:
      sha-short: ${{ steps.vars-step.outputs.sha-short }}
    steps:
      - name: Init git vars
        shell: bash
        id: vars-step
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            export JSON_RESP=`curl -s --request GET --url "${{ github.event.issue.pull_request.url }}" --header "Authorization: Bearer $GH_TOKEN"`
            echo "sha-short=`echo $JSON_RESP | jq -r .head.sha | cut -c1-7`" >> $GITHUB_OUTPUT
            echo "branch=`echo $JSON_RESP | jq -r .head.ref`" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF = *refs/heads/* ]]; then
            echo "sha-short=`echo $GITHUB_SHA | cut -c1-7`" >> $GITHUB_OUTPUT
            echo "branch=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          else
            echo "sha-short=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_OUTPUT
            echo "branch=$GITHUB_HEAD_REF" >> $GITHUB_OUTPUT
          fi

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.vars-step.outputs.branch }}

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.docker-registry }}
          username: _json_key
          password: ${{ secrets.gcp-sa-json }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push image
        id: build-push-docker-img
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ inputs.docker-registry }}/${{ secrets.gcp-project-id }}/${{ inputs.repository-base-name }}:${{ steps.vars-step.outputs.sha-short }}
            ${{ inputs.docker-registry }}/${{ secrets.gcp-project-id }}/${{ inputs.repository-base-name }}:${{ inputs.docker-tag }}
            ${{ inputs.docker-registry }}/${{ secrets.gcp-project-id }}/${{ inputs.repository-base-name }}:${{ steps.vars-step.outputs.branch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GH_ACCESS_TOKEN=${{ secrets.gh-token }}
            BUILDKIT_INLINE_CACHE=1
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.gh-token }}
      - uses: act10ns/slack@v1
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          webhook-url: ${{ secrets.slack-build-webhook }}
        if: failure()