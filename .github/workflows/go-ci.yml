name: go-build

on:
  workflow_call:
    secrets:
      gh-token:
        required: true
      slack-build-webhook:
        required: false
    inputs:
      workdir:
        type: string
        description: Directory where the go code can be found
        default: ./

jobs:
  test:
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.workdir }}
    steps:          
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - uses: actions/checkout@v3
      - name: Granting private modules access
        env:
          ORG_GITHUB_TOKEN: ${{ secrets.gh-token }}
        run: |
            git config --global url."https://$ORG_GITHUB_TOKEN@github.com/12traits".insteadOf "https://github.com/12traits"   

      - name: Build
        id: go-build
        env:
          BUILD_NUMBER: ${{ github.run_number }}
        run: go build ./...

      - name: Test
        id: go-unit-tests
        run: go test -v ./...

      - uses: act10ns/slack@v1
        with: 
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          webhook-url: ${{ secrets.slack-build-webhook }}
        if: failure()

  lint:
    name: lint
    runs-on: self-hosted
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.workdir }}
    steps:  
        - uses: actions/setup-go@v3
          with:
            go-version: '1.20'

        - uses: actions/checkout@v3

        - name: Granting private modules access
          env:
            ORG_GITHUB_TOKEN: ${{ secrets.gh-token }}
          run: |
              git config --global url."https://$ORG_GITHUB_TOKEN@github.com/12traits".insteadOf "https://github.com/12traits"           

        # run locally by installing golangci-lint https://golangci-lint.run/usage/install/#local-installation
        # and executing it in the root of the project
        - name: golangci-lint
          id: go-lint
          uses: golangci/golangci-lint-action@v3.2.0
          with:
            args: --timeout=5m --enable unparam
            working-directory: ${{ inputs.workdir }}
        - uses: act10ns/slack@v1
          with: 
            status: ${{ job.status }}
            steps: ${{ toJson(steps) }}
            webhook-url: ${{ secrets.slack-build-webhook }}
          if: failure()